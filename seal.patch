diff --git a/native/src/seal/util/polyarithsmallmod.cpp b/native/src/seal/util/polyarithsmallmod.cpp
index e3f0afca..c96f6229 100644
--- a/native/src/seal/util/polyarithsmallmod.cpp
+++ b/native/src/seal/util/polyarithsmallmod.cpp
@@ -328,10 +328,10 @@ namespace seal
             {
                 throw invalid_argument("result");
             }
-            if (poly == result)
-            {
-                throw invalid_argument("result cannot point to the same value as poly");
-            }
+            // if (poly == result)
+            // {
+            //     throw invalid_argument("result cannot point to the same value as poly");
+            // }
             if (modulus.is_zero())
             {
                 throw invalid_argument("modulus");
@@ -340,7 +340,7 @@ namespace seal
             {
                 throw invalid_argument("coeff_count");
             }
-            if (shift >= coeff_count)
+            if (shift >= 2 * coeff_count)
             {
                 throw invalid_argument("shift");
             }
@@ -352,6 +352,12 @@ namespace seal
                 return;
             }
 
+            bool neg = false;
+            if (shift >= coeff_count) {
+                shift -= coeff_count;
+                neg = true;
+            }
+
             uint64_t index_raw = shift;
             uint64_t coeff_count_mod_mask = static_cast<uint64_t>(coeff_count) - 1;
             for (size_t i = 0; i < coeff_count; i++, poly++, index_raw++)
@@ -366,6 +372,10 @@ namespace seal
                     result[index] = modulus.value() - *poly;
                 }
             }
+
+            if (neg) {
+                negate_poly_coeffmod(result, coeff_count, modulus, result);
+            }
         }
     } // namespace util
 } // namespace seal
